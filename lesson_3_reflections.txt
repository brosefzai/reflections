When would you want to use a remote repository rather than keeping all your work
local?

    When collaborating in a team, as well as if you have multiple computers/workspaces
    and work with the same code on different machines. Also, backup.

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    The same reason why commits are manual and not auto-saving. The coder/user
    defines the logical step, both where a commit will be published, and thus
    where a change is synced.
    Also, some changes might not be ready for public viewing; and so work done
    on one machine might want to be pushed once it is deemed ready, in a batch
    of commits.

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

    branch: to investigate a different version of the program
        use locally and experimentally
    clone: to download a repo to your local machine
        to download a repo. Either one that's already on your GH account, or
        one that's been forked from another
    fork: to copy a repo from one account to another on GitHub
        to copy out someone else's code into your account so that you can make
        your own personalised amendments, while keeping credit/source

What is the benefit of having a copy of the last known state of the remote
stored locally?

    So that you can compare origin/master and master if/when offline. origin/master
    also serves as the local copy upon which git merge acts.

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    Fill in your answer here

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    Fill in your answer here
